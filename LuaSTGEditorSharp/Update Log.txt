-- Update Log（May 4th, 2025）

v0.78.0
- New node: "Protected call". Just a "pcall" node accepting children nodes.
- New node: "Render Animation". There was "load animation" so why not render.
- Added a remote template github repo: Those templates can be downloaded via the "New File" window when you create a new project. There is an option to disable those in the settings.
- Added a log system. The log will save under "editor.log" in the main editor folder. Please send this log if you're experiencing issues so we can help debug them.
- Added a "last = " prefix to the set stage background node.
- Revamped the "About" window.
- Added *.glb files in the model file selector.
- BREAKING: Add File node now support multiple files separated by a `|` character. This might break compability with some files. If this happens, delete and recreate the node.
- Fixed indentation for the "set smooth value" node.
- Fixed Simple Bent Lasers.
- Fixed "3d" view mode being defaulted to "3D".
- Fixed the "Play BGM" node (Thanks OLC).
- Fixed the Rotation attribute window being set to "Color" in the "Create Simple Laser" node.

v0.77.2
- New node: "Create Simple Laser". A plain laser supporting tasking. (Exactly like "Simple Enemies").
- New node: "Create Simple Bent Laser". A plain bent laser supporting tasking.
- New node: "Return".
- New node: "Load Model".
- New node: "Render Model".
- Added a "Open Recent" menu option on the "File" menu.
- Fixed some nodes' displayed description (capital letters)
- Cleaned generated code for all nodes.
- Fixed a display error on the "Input Point Set" input window.
- Fixed a lot of node's GetLines.
- Fixed a near-fatal bug where you could delete node attributes on the parameters window. (still amazes me how nobody found this before)

v0.77.1
- When compiling in plain files, the editor now checks if you're trying to compile in the same folder as your project file and will throw an error if that's the case.
- The "LoadBGM" node now starts with arguments loop end and loop length at 0.
- Added new blend modes options.
- The editor won't throw an error when trying to compile if the same file name with the same scope is used twice.
- Cloned (copied) item definitions where bugged, the init function was cloning itself incorrectly.
- Hopefully fixed Auto Updates for good.

v0.77.0
- Support for compilation in LuaSTG Evo.
- Added the project meta file to the auto backup.
- Added the alignment window to the format input on the RenderTTF node.
- Re-arranged a lot of code output of nodes (correct indentation and new lines).
- Changed some nodes descriptions.
- Removed the "beta" attribute for Sub support.
- Made the "Set/Wait for signal", "Add chargeball" and "Set Pace" not trigger THlib compat. errors for Evo and Sub.
- Fixed display errors in all main Input Windows.
- Fixed a problem with selecting the arrow on the nodes attributes' dropdowns (the mouse wouldn't select it).
- Fixed comment double new-line code output.
- The editor won't throw an error when the LuaSTG executable path isn't the same as the target compile version.
- Replaced font file paths with "/" instead of "\\" in order to improve other platforms' compatibility.
- Fixed compilation errors when having the same file name with the same scope.

v0.76.0
-Fixed a bug introduced in the last version that crashes the editor when closing a project.
-Added auto updates support (and settings to check updates on startup).
-Added auto saves for projects.
-Added dark/light modes for the (almost) whole editor.
-Added toast notifications.

v0.75.2:
-Added current project name to window title
-Added error messages to custom nodes
-Added leaf node functionality to custom nodes
-Added log window popup for LuaSTG Sub

v0.75.1:
-Added call function node (data tab)
-Added particle fire and particle stop nodes (render tab)
-Added option to export projects to folders instead of compressed files
-Added automatic plugin detection for the selected LuaSTG version
-Remade the plugin loading failure warning behavior and text
-(EXPERIMENTAL) Added custom editor nodes. See the examples.

v0.74.3:
-Fixed defined items crashing the game
-Fixed play SE/BGM nodes not playing a preview for the selected option
-Fixed the dropdown list on the Play SE node not having quotes around the sound effect name

v0.74.2:
-Fixed fatal behavior on defined player bullets (uninitialized default procedure for _object type class)
-Added show mouse node (game data tab)

v0.74.1:
-Added event type parameter for default action node
-Changed defined player bullet classes to editor classes (added default action support)
-Added defined items (and the create item node) (object tab)
-Ported (added) custom interpolation variable node from Tom's repo (advanced tab)
-Ported (added) filtering from Tom's repo
-3D nodes are now added by default in the init function of defined backgrounds
-Added Hinter node (stage tab)
-Added table control nodes (data tab)
-Added Base support of color themes
-Added Fadeout BGM node (audio tab)
-Fix set image/animation center parenting (cannot place under resources)
-Added "task.Do(self)" to the define background's on frame() output
-Replaced "self" with "player" on the set player's speed node output
-Added stage finish replay node (stage tab)
-Added mask fader node (stage tab)
-Added set BGM volume node (audio tab)
-Added bool type to the define background's 2nd parameter (Is Spell BG)
-Added while node (general tab)
-Fixed preserve node cloning
-Added for each unit in list node (object tab)

v0.73.1:
-Fixed the not loading of meta info in TTF types in Xlib
-Fixed the not working frame/render operations of defined player bullets
-Replaced the help screen with a browser navigator that points to https://ryannthi.github.io/LuaSTG-Editor-Sharp-X/
-Fixed signal cloning
-Fixed the incorrect indenting output of the set stage background node
-Fixed the incorrect spacing of the set color node display string
-If players don't have names defined, the editor now will not permit the user to run the game
-Fixed the set image node indenting output
-Fixed the output of the thunder parameter of the curvy laser node to allow numbers instead of booleans as well
-Added target option to the player option list node
-Remade the output of the enemy charge node so that it only inputs parameters you placed in (compatibility for -x)
-Reworded the display string of the set visibility node
-Fixed the position assignment node output
-Fixed the incorrect default value of scale of the render text node
-Fixed the incorrect parenting properties of the callback nodes from the defined player bullets
-Fixed bullet cleaner display string mixup
-Added set image state (graphics tab)
-Added set animation state (graphics tab)

v0.72.1:
-Added render node (render tab)
-Fixed crashing of the editor whenever a saved project file contained the set hitbox node
-Fixed cloning error of the set pace node
-Changed the font for the code view/edit input box from Courier New 14 to JetBrains Mono 13
-Added a "mod version" parameter to the editor settings node (won't appear on already-existing projects)
-Added render rect node (render tab)
-Create bullet group node now returns in a table called "last_list";
(tip, individual bullets can be used through (use unit here)
    for k, unit in ipairs(last_list) do
        --your code here
    end
)
-Added (back?) the entirety of the background tab
(Set 3D node                              -> lets you set individual values for the many 3d viewpoints (eye, at, fog, etc)
Create Camera Setter node                 -> creates the camera setter object
Define Background node                    -> lets you define a background (comes with many nodes inside)
BG On Frame node                          -> the define background node custom on frame()
BG On Render node                         -> the define background node custom on render()
Render clear node                         -> executes the render clear function
Render 4V 3D node                         -> executes the render4v function, but with the Z axis available for the user
Background Warp Effect Capture/Apply node -> executes the background warp effect capture/apply function)
-Changed the set stage background node to make it check if there's an editor-defined background named as the selected one before creating one from THlib
-Fixed extension register bug where it tried to attach the file types to a non-existent executable
-Added colored folder nodes (Red/Green/Blue/Yellow) (general tab)
-Added (back?) the entirety of the player tab
(Define player node              -> lets you define a custom player
Set player walk image node       -> lets you set the player's image and hitbox
Player class render node         -> renders the player in a player class
Player class frame node          -> executes the frame of the player in a player class
Create player option list node   -> creates a list with 4 power levels and options for each power level that holds specific positions (self.slist, unfocused position, focused position)
Render player options node       -> renders the player options
Set player speed node            -> lets you set the unfocused and focused speed of a player
Set player protect node          -> lets you set a player invulnerability for a given amount of frames
Create player spell mask node    -> creates a player spell mask with colors and times
Find player target node          -> finds targets from the player class and attaches to unit
Create simple player bullet node -> creates a simple player bullet with or not homing capability)
Define player bullet             -> defines a player bullet in the same fashion as a define bullet node
Create player bullet             -> creates a defined player bullet in the same fashion as create defined bullet node
Set player shooting delay node   -> lets you alter the nextshoot player variable
Set player spell delay node      -> lets you alter the nextspell player variable
Set player special delay node    -> lets you alter the nextspecial player variable
-Added set object killflag node (control tab)
-Added the entirety of the game data tab
(Set player lives node      -> sets the amount of lives the player has
Set player life pieces node -> sets the amount of life pieces the player has
Set player bombs node       -> sets the amount of bombs the player has
Set player bomb pieces node -> sets the amount of bomb pieces the player has
Set player power node       -> sets the amount of power the player has
Set player pointrate node   -> sets the game pointrate
Set player faith node       -> sets the amount of faith the player has
Set player graze node       -> sets the amount of graze the player has
Set game score node         -> sets the amount of score the game has
Kill player                 -> kills the player
Snapshot node               -> takes a screenshot of the screen and saves it in the snapshot folder with a given name
Raise error node            -> crashes the game intentionally with a given error message (useful for debug)
Raise warning node          -> creates a warning box with a given alert message (useful for debug))
-Added set font state node (graphics tab)
-Added set image center node (graphics tab)
-Added set animation center node (graphics tab)

v0.71.1:
-Refactored the icons and strings pertaining to LuaSTG Sharp Editor to LuaSTG Sharp Editor X
-Expanded the bullet type window and dropdown list with previously unavailable bullets
-Fixed crash on the Play BGM node where if you defined a specific timestamp to start playing the song the editor would close itself
-Replaced the sampling parameter on the define bent laser on init() with the thunder parameter (bool as to if the laser graphic should be a "Raiko laser", converts to sampling 4/0)
-Groundwork done on the help/about menu (help wanted)
-Changed target engine text to make it independent of LuaSTG version
-Added a warning when you try using ExPlus-originally-exclusive nodes on a version that isn't ExPlus (you can disable this warning in the settings)
-Added more resolution options when debugging
-Added the entirety of the Control tab
(Set Property node -> lets you assign any property to an unit
Set Rotation node -> lets you change the rotation/angle/rot of an unit
Set Autorotation node -> lets you enable/disable autorotation (navi) of an unit
Set Size node -> lets you change the scale (hscale, vscale) of an unit
Set Hitbox node -> lets you set the hitbox (a, b) size of an unit
Set Collision node -> lets you enable/disable the hitbox collision of an unit
Set Object Border Autodeletion -> lets you enable/disable the border culling of an unit
Set Object Border Shuttle -> lets you teleport an unit to the other side of the screen once they're past the other side
Set Object Border Rebounce -> lets you make an unit rebounce off the edges
Position Assignment -> relocated from the Data tab to the Control tab
Set Object X/Y Velocity -> lets you input specific x and y velocities of an unit
Set Object X/Y Acceleration -> lets you input specific x and y acceleration values of an unit
Set Object Omiga -> lets you set an unit's omiga value (autospin)
Set Object Group -> lets you set an unit's group
Set Object Layer -> lets you set an unit's layer
Set Object Visibility -> lets you enable/disable the hide property of an unit)
-Added advanced sentence node (boss tab)
-Added load font and load font image node (graphics tab)
-Added render text node (render tab)
-Added load TTF node (graphics tab)
-Added render TTF node (render tab)
-Added set view mode node (render tab)

v0.70.1:
-Added extra parameters to the charge enemy node (enemy tab)
-Added chargeball node (boss tab)
-Added SetFPS node (task tab)
-Added load texture node (graphics tab)
-Added preserve unit node (object tab)
-Added set music pace node (audio tab)
-Replaced set signal and wait for signal node images

v0.69.1:
-Added custom editor output names
-Added set signal and wait for signal
-Removed BossSCBeforeFinish and BossSCAfterFinish
-Branch created from LuaSTG Editor Sharp for 0.83 from czh098tom (https://github.com/czh098tom/LuaSTG-Editor-Sharp)